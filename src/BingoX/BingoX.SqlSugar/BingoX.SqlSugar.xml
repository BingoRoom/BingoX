<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BingoX.SqlSugar</name>
    </assembly>
    <members>
        <member name="T:BingoX.SqlSugar.SqlSugarDbContext">
            <summary>
            SqlSugar数据库上下文
            </summary>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarDbContext.#ctor(SqlSugar.ConnectionConfig)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:BingoX.SqlSugar.SqlSugarDbContext.Client">
            <summary>
            SqlSugar客户端
            </summary>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarDbContext.Close">
            <summary>
            
            </summary>
        </member>
        <member name="T:BingoX.SqlSugar.SqlSugarRepositoryStringID`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositoryStringID`1.#ctor(BingoX.SqlSugar.SqlSugarDbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositoryStringID`1.Exist(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BingoX.SqlSugar.SqlSugarRepositoryGuid`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositoryGuid`1.#ctor(BingoX.SqlSugar.SqlSugarDbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositoryGuid`1.Exist(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BingoX.SqlSugar.SqlSugarRepositorySnowflake`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositorySnowflake`1.#ctor(BingoX.SqlSugar.SqlSugarDbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositorySnowflake`1.Exist(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BingoX.SqlSugar.SqlSugarRepositoryIdentity`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositoryIdentity`1.#ctor(BingoX.SqlSugar.SqlSugarDbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepositoryIdentity`1.Exist(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BingoX.SqlSugar.SqlSugarRepository`2">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="pkType"></typeparam>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.#ctor(BingoX.SqlSugar.SqlSugarDbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:BingoX.SqlSugar.SqlSugarRepository`2.Wrapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:BingoX.SqlSugar.SqlSugarRepository`2.UnitOfWork">
            <summary>
            
            </summary>
        </member>
        <member name="P:BingoX.SqlSugar.SqlSugarRepository`2.Context">
            <summary>
            
            </summary>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.CreateWapper``1">
            <summary>
            
            </summary>
            <typeparam name="TModel"></typeparam>
            <returns></returns>
        </member>
        <member name="P:BingoX.SqlSugar.SqlSugarRepository`2.IsLock">
            <summary>
            
            </summary>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Add(`0)">
            <summary>
            新增
            </summary>
            <param name="entity"> 实体对象 </param> 
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            新增
            </summary>
            <param name="entites">泛型集合</param>
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.AddReturnEntity(`0)">
            <summary>
            新增
            </summary>
            <param name="entity"> 实体对象 </param> 
            <returns>返回实体</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.AddReturnBool(`0)">
            <summary>
            新增
            </summary> 
            <param name="entity"> 实体对象 </param> 
            <returns>返回bool, 并将identity赋值到实体</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.AddReturnBool(System.Collections.Generic.List{`0})">
            <summary>
            新增
            </summary>
            <param name="entites">泛型集合</param>
            <returns>返回bool, 并将identity赋值到实体</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Update(`0)">
            <summary>
            修改（主键是更新条件）
            </summary>
            <param name="entity"> 实体对象 </param> 
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Update(System.Linq.Expressions.Expression{System.Func{`0,`0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            修改
            </summary>
            <param name="update"> 实体对象 </param> 
            <param name="where"> 条件 </param> 
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            修改（主键是更新条件）
            </summary>
            <param name="entites"> 实体对象集合 </param> 
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Delete(`0)">
            <summary>
            删除
            </summary>
            <param name="entity"> 实体对象 </param> 
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            删除
            </summary>
            <param name="where"> 条件 </param> 
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Delete(`1[])">
            <summary>
            删除
            </summary>
            <param name="pkArray">待删主键集合</param>
            <returns>操作影响的行数</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询
            </summary>
            <param name="whereLambda">查询表达式</param>
            <returns></returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.QueryAll">
            <summary>
            查询所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询集合
            </summary>
            <param name="whereLambda">查询表达式</param>
            <returns>实体</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Where(System.String)">
            <summary>
            查询集合
            </summary>
            <param name="sql">sql</param>
            <returns>实体</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Take(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32)">
            <summary>
            查询前多少条数据
            </summary>
            <param name="whereLambda">查询表达式</param>
            <param name="num">数量</param>
            <returns></returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查询单条数据
            </summary>
            <param name="whereLambda">查询表达式</param> 
            <returns></returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.GetId(`1)">
            <summary>
            查询单条数据
            </summary>
            <param name="id">泛型参数(集合成员的类型</param>
            <returns></returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.IsExist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在
            </summary>
            <param name="whereLambda">查询表达式</param> 
            <returns></returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.PageList(BingoX.Repository.ISpecification{`0},System.Int32@)">
            <summary>
            分组查询
            </summary>
            <param name="specification">查询规格</param>
            <param name="total">总记录数</param>
            <returns>当前页查询结果集</returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarRepository`2.Exist(`1)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarUnitOfWork.BeginTran(System.Data.IsolationLevel)">
            <summary>
            初始化事务
            </summary>
            <param name="level"></param>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarUnitOfWork.Commit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:BingoX.SqlSugar.SqlSugarUnitOfWork.Rollback">
            <summary>
            回滚事务
            </summary>
        </member>
    </members>
</doc>
